---------------------------------------------------
Name : Charles Ancheta, Poulomi Ganguly
ID: 1581672, 1598887
CMPUT 275 , Winter 2020

Assignment 1, Part 2: Restaurant Finder
---------------------------------------------------

Included Files:
    
    Source Files
    * a1part2.cpp
    * coordinates.cpp
    * jcursor.cpp
    * lcd_image.cpp
    * touchs.cpp
    * restlist.cpp
    * joysel.cpp
    * sorting.cpp
    Header Files
    * coordinates.h
    * jcursor.h
    * lcd_image.h
    * touchs.h
    Other
    * README
    * Makefile

Accessories:

	* 1 Arduino Mega Board
	* 5 Male to Female Wires
    * TFT Display with Stylus
    * Joystick

Wiring Instructions

    * Can be found on e-class: https://eclass.srv.ualberta.ca/mod/page/view.php?id=3504822
    * A8 <---> VRy
    * A9 <---> VRx
    * 53 <---> SW
    * GND <--> Negative bus bar 
    * 5V <---> Positive bus bar

Running Instructions:

    * Connect the Arduino to PC using an A-B style USB cable. Ensure that the Arduino is 
    using the proper serial port (/dev/ttyACMO or -ACM1)
    * In the correct directory, run command `make upload` in Terminal

Functions Used:

1. a1part2.cpp
    * main(): Switches between mode 0 and mode 1 and reinitializes map after
    exiting mode 1.

2. coordinates.cpp
    * getRestaurantFast(): Function from weekly exercise 2 to load restaurant
    quickly

3. jcursor.cpp
    * redrawCursor(): Redraws cursor on map.
    * drawMap(): Draws an entire map patch on screen.
    * mapInit(): Reinitializes screen for redrawing map.
    * redrawMapBg(): Redraws small patch of map where cursor was previously
    * processAnalog(): Processes analog changes made by joystick and increments cursor position accordingly.
    * moveMapPatch(): Moves map patch when cursor reaches edge of screen
    * clampMapBounds(): Makes sure the cursor doesnt leave map bounds
    * screenBoundCheck(): Checks if cursor is in bounds of screen
    * setup(): Sets up touch screen, SD card reads and map patch.
    * processJoystick(): Utilizes previous functions to process joystick input.

4. lcd_image.cpp: Given in class, draws image patch from SD card to Display

5. touchs.cpp:
    * drawDots(): Displays nearby restaurants as dots on the screen 
    * writeVertical(): Writes strings on the screen vertically
    * writeLabel(): Writes on the buttons
    * changeSort(): Changes the selected sort setting
    * changeNum(): Changes the number on the button
    * setRating(): Changes the rating threshold for restaurants
    * btnSetup(): Sets up the buttons for Mode 0
    * processTouchScreen(): Processes where tft has been touched to draw dots or change settings.

6. restlist.cpp: 
    * adjustCoordinates: Centers selected restaurant on screen, takes into account boundary conditions
    * goToResto(): Places cursor on selected restaurant if possible
    * restList(): Displays filtered list of restaurants

7. joysel.cpp
    * displayText(): Loads and highlights the toggled restaurant to print to tft
    * clearScreen(): Clears screen
    * pageUpdate(): Sets up screen to display 21 restaurants
    * lastPage(): pageUpdate modification for last page 
    * joySelect(): Lets user select a restaurant to take cursor to in mode 0

8. sorting.cpp
    * swapRest(): Swaps two RestDist variables
    * iSort(): Implementation of insertion sort from given pseuodocode
    * pivot(): Pivots array for Quick Sort
    * qSort(): Quick sort function implemented from eclass
    * calculateDist(): Calculates manhattan distance between given cursor position
    and all Restaurants
    * clearRDArray(): Clears RestDist array for reloading from SD card
    * filterRestaurants(): Loads restaurants from SD and filters out any restaurant below rating threshold
    * runSort(): Sorts RestDist array with either insertion sort or quick sort and records running time