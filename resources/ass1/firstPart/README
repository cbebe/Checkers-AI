---------------------------------------------------
Name : Charles Ancheta, Poulomi Ganguly
ID: 1581672, 1598887
CMPUT 275 , Winter 2020

Assignment 1, Part 1: Restaurant Finder
---------------------------------------------------

Included Files:
    
    * a1part1.cpp
    * coordinates.cpp
    * coordinates.h
    * jcursor.cpp
    * jcursor.h
    * lcd_image.cpp
    * lcd_image.h
    * restlist.cpp
    * restlist.h
    * touchs.cpp
    * touchs.h
    * README
    * Makefile

Accessories:

	* 1 Arduino Mega Board
	* 5 Male to Female Wires
    * TFT Display with Stylus
    * Joystick

Wiring Instructions

    * Can be found on e-class: https://eclass.srv.ualberta.ca/mod/page/view.php?id=3504822
    * A8 <---> VRy
    * A9 <---> VRx
    * 53 <---> SW
    * GND <--> Negative bus bar 
    * 5V <---> Positive bus bar

Running Instructions:

    * Connect the Arduino to PC using an A-B style USB cable. Ensure that the Arduino is 
    using the proper serial port (/dev/ttyACMO or -ACM1)
    * In the correct directory, run command `make upload` in Terminal

Functions Used:

1. a1part1.cpp
    * main(): Switches between mode 0 and mode 1 and reinitializes map after
    exiting mode 1.

2. coordinates.cpp
    * getRestaurantFast(): Function from weekly exercise 2 to load restaurant
    quickly

3. coordinates.h: 
    Holds all map coordinates related global variables and restaurant structures. 
    Also globally declares variables for loading data from SD Card

4. jcursor.cpp
    * redrawCursor(): Redraws cursor on map.
    * drawMap(): Draws an entire map patch on screen.
    * mapInit(): Reinitializes screen for redrawing map.
    * setup(): Sets up touch screen, SD card reads and map patch.
    * redrawMapBg(): Redraws small patch of map where cursor was previously
    * processAnalog(): Processes analog changes made by joystick and
    increments cursor position accordingly.
    * moveMapPatch(): Moves map patch when cursor reaches edge of screen
    * clampMapBounds(): Makes sure the cursor doesnt leave map bounds
    * screenBoundCheck(): Checks if cursor is in bounds of screen
    * processJoystick(): Utilizes previous functions to process joystick input.

5. jcursor.h
    Defines all cursor related global variables and declares for later use 

6. lcd_image.cpp: Given in class, draws image patch from SD card to Display

7. lcd_image.h: Given in class, declares necessary variables for lcd_image.cpp

8. restlist.cpp: 
    * displayText(): Loads and highlights the toggled restaurant to print to tft
    * displayAllText(): Sets up screen to display nearest 21 restaurants 
    * joySelect(): Lets user select a restaurant to take cursor to in mode 1
    * swapRest(): Swaps two RestDist variables
    * iSort(): Implementation of insertion sort from given pseuodocode
    * calculateDist(): Calculates manhattan distance between given cursor position
    and all Restaurants
    * loadAllRestaurants(): Loads all restaurants from SD card to RestDist Array
    which is then sorted to display first 21 restauarants
    * adjustCoordinates: Centers selected restaurant on screen, takes into 
    account boundary conditions
    * goToResto(): Places cursor on selected restaurant if possible

9. restlist.h: 
    Contains required global variables and declaractions for restlist.cpp

10. touchs.cpp:
    * drawDots(): Displays nearby restaurants as dots on the screen 
    * processTouchScreen(): Processes where tft has been touched to draw dots.

11. touchs.h: Contains touchscreen related global variables and declaractions.

